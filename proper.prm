# Evaluation parameter file, based on COLLINS.prm distributed with EVALB

##-------------------------------------------##
## Debug mode                                ##
##   0: No debugging                         ##
##   1: print data for individual sentence   ##
##-------------------------------------------##
DEBUG 0

##-------------------------------------------##
## MAX error                                 ##
##    Number of error to stop the process.   ##
##    This is useful if there could be       ##
##    tokenization error.                    ##
##    The process will stop when this number ##
##    of errors are accumulated.             ##
##-------------------------------------------##
MAX_ERROR 10

##------------------------------------------ ##
## Cut-off length for statistics             ##
##    At the end of evaluation, the          ##
##    statistics for the sentences of length ##
##    less than or equal to this number will ##
##    be shown, on top of the statistics     ##
##    for all the sentences                  ##
##-------------------------------------------##
CUTOFF_LEN 40

##-------------------------------------------##
## unlabeled or labeled bracketing           ##
##    0: unlabeled bracketing                ##
##    1: labeled bracketing                  ##
##-------------------------------------------##
LABELED 1                 

##-------------------------------------------##
## Delete labels                             ##
##    list of labels to be ignored.          ##
##    If it is a pre-terminal label, delete  ##
##    the word along with the brackets.      ##
##    If it is a non-terminal label, just    ##
##    delete the brackets (don't delete      ##
##    children).                             ##
##-------------------------------------------##

# Sentences for which parsing failed may be marked with a 'NOPARSE' constituent,
# we ignore this label because it is not intended as an actual bracketing
DELETE_LABEL NOPARSE

# Delete root node
DELETE_LABEL TOP
DELETE_LABEL ROOT
DELETE_LABEL VROOT

# Punctuation
# NB: contrary to COLLINS.prm, ignore ALL punctuation (including brackets)

# Negra / Tiger
DELETE_LABEL $,
DELETE_LABEL $(
DELETE_LABEL $[
DELETE_LABEL $.

# Alpino
DELETE_LABEL PUNCT
DELETE_LABEL punct
DELETE_LABEL LET[]
DELETE_LABEL LET()
DELETE_LABEL LET
DELETE_LABEL let[]
DELETE_LABEL let()
DELETE_LABEL let

# PTB
DELETE_LABEL ,
DELETE_LABEL :
DELETE_LABEL ``
DELETE_LABEL ''
DELETE_LABEL .
DELETE_LABEL -NONE-

# Treebank independent, match punctuation by word
DELETE_WORD .
DELETE_WORD ,
DELETE_WORD :
DELETE_WORD ;
DELETE_WORD '
DELETE_WORD `
DELETE_WORD "
DELETE_WORD ``
DELETE_WORD ''
DELETE_WORD -
DELETE_WORD (
DELETE_WORD )
DELETE_WORD /
DELETE_WORD &
DELETE_WORD $
DELETE_WORD !
DELETE_WORD !!!
DELETE_WORD !!!
DELETE_WORD ?
DELETE_WORD ??
DELETE_WORD ???
DELETE_WORD ..
DELETE_WORD ...
DELETE_WORD «
DELETE_WORD »

##------------------------------------------##
## Delete labels for length calculation     ##
##    list of labels to be ignored for      ##
##    length calculation purpose            ##
##------------------------------------------##
#DELETE_LABEL_FOR_LENGTH -NONE-

##------------------------------------------##
## Equivalent labels, words                 ##
##     the pairs are considered equivalent  ##
##     This is non-directional.             ##
##------------------------------------------##
EQ_LABEL ADVP PRT

EQ_WORD  -LRB- (
EQ_WORD  -RRB- )

# Whether to evaluate only on discontinuous constituents:
DISC_ONLY 0
